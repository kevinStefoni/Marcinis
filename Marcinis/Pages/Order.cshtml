@page
@using Marcinis.Models;
@using Marcinis.Helpers;
@model Order
@{
    ViewData["Title"] = "Order";
    IList<string>? categories = SessionHelper.GetObjectFromJson<IList<string>>(HttpContext.Session, "categories");
    IList<MenuItem>? menu = SessionHelper.GetObjectFromJson<IList<MenuItem>>(HttpContext.Session, "menu");
    Model.OrderDetails = SessionHelper.GetObjectFromJson<Dictionary<string, string>>(HttpContext.Session, "OrderDetails") ?? Model.OrderDetails;
}

<head>
    <link rel="stylesheet" href="/css/order.css"/>
</head>

<!-- This is the menu button group. The links take the user to headings and categories within the menu. -->
<div id="stick">
    <div id=menuNavBar class="btn-group d-flex" role="group">
        @if (categories != null)
        {
            @foreach (string category in categories)
            {
                <a id="ll" class=w-100 href="#@category">@category</a>
            }
        }
        <a id="ll" data-bs-toggle="collapse" href="#SearchAndSort" role="button" aria-expanded="false" aria-controls="collapseExample">
            <img id="search" src="~/images/searchIcon.png" width="30" height="25" />
        </a>
    </div>
    <div class="collapse" id="SearchAndSort">
        <div id="DropDiv">
            <form method="post">

                @if ((string?)ViewData["DISPLAY"] != "PRICE")
                {
                    <button asp-page-handler="SortByPrice" class="submit">&nbsp;Sort by Price&nbsp;</button>
                }
                else
                {
                    <button asp-page-handler="" class="submit clearbutton">&nbsp;Clear&nbsp;</button>
                }

                @if ((string?)ViewData["DISPLAY"] != "AVAILABILITY")
                {
                    <button asp-page-handler="SortByAvailability" class="submit">&nbsp;Sort by Availability&nbsp;</button>
                }
                else
                {
                    <button asp-page-handler="" class="submit clearbutton">&nbsp;Clear&nbsp;</button>
                }

                <input type="text" asp-for="Search" asp-page-handler="Search" id="s" placeholder="Search..." />
                <button asp-page-handler="Search" class="submit searchit" id="searchButton"><img id="search" src="~/images/arrow.png" width="27" height="24" /></button>
            </form>
        </div>
    </div>
</div>

<!-- This is where all the menu item cards are generated. -->
<form method="post">
    <div class="container mx-auto mt-4">
        <div class="row">

            <!--Loop through each category on the menu, like appetizers, pasta, pizza, and dessert.-->
            @if(categories != null)
                @foreach (string category in categories)
                {
                    <p style="visibility: hidden; margin-bottom: 35px;" id="@category">-</p>
                    <h1>@category</h1>

                    // loop through every item in the menu--fairly inefficient because it is O(n^2)
                    if (menu != null)
                    {
                        foreach (MenuItem item in menu)
                        {
                            // check if the item is in the category currently being populated
                            if (item.PROD_CATEGORY != null && item.PROD_CATEGORY.Equals(category))
                            {
                               
                                var PTAG = item.PROD_NAME?.Replace(" ", "");
                                PTAG = PTAG?.Replace("'", "");
                                
                                
                                <div class="col-md-3">
                                    <p style="visibility: hidden; transform: translateY(-15px);" id="@PTAG">-</p>
                                    <div id="genCard" class="card" style="width: 18rem;">
                                        <div class="bg-image">
                                            @{
                                                string imgSrc;
                                                if(item.PROD_IMG != null)
                                                {
                                                    var base64 = Convert.ToBase64String(item.PROD_IMG, 0, item.PROD_IMG.Length);
                                                    imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                                                }
                                                else
                                                {
                                                    imgSrc = "/Menu Items/Appetizers/breadsticks.jpg";
                                                }
                                            }
                                            <img src="@imgSrc" class ="img-fluid" style="object-fit: cover;" />
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">@item.PROD_NAME</h5>
                                            <p class="card-text">@item.PROD_DESC</p>
                                            @if (item.PROD_QOH > 0)
                                            {
                                                <p>@item.PROD_QOH left</p>
                                            }
                                            else
                                            {
                                                <p>Out of stock!</p>
                                            }
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @if (item.PROD_NAME != null)
                                                    {
                                                        @if (!Model.OrderDetails.ContainsKey(item.PROD_NAME))
                                                        {
                                                            Model.OrderDetails.Add(item.PROD_NAME, "0");
                                                        }
                                                        
                                                    }
                                                    @if (item.PROD_NAME != null)
                                                    {
                                                        @Html.DropDownListFor(m => Model.OrderDetails[item.PROD_NAME],
                                Model.AllAvailableQuantities[item.PROD_NAME], new { onchange = "location.href='#" + @PTAG + "';this.form.submit();", @class = "form-control" })
                                                    }
                                                </div>
                                                <span id="prodPrice"><strong>$@item.PROD_PRICE</strong></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
        </div>
    </div>
</form>


@section scripts{
    <script src="/js/order.js" type="text/javascript"></script>
}